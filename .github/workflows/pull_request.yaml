name: CI

on:
  push:
    branches:
    - master
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  flake8:
    name: flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: python -m pip install flake8
      - name: flake8
        uses: liskin/gh-problem-matcher-wrap@e7b7beaaafa52524748b31a381160759d68d61fb
        with:
          linters: flake8
          run: flake8

  isort:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: python -m pip install "isort<6"
      - name: isort
        # Pinned to v3.0.0.
        uses: liskin/gh-problem-matcher-wrap@e7b7beaaafa52524748b31a381160759d68d61fb
        with:
          linters: isort
          run: isort --check --diff src tests
  black:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: black
        uses: psf/black@stable

  tests:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-22.04
    needs: ["flake8", "isort", "black"]
    strategy:
      matrix:
        python-version:
        - "3.8"
        - "3.9"
        - "3.10"
        - "3.11"
        - "3.12"
        - "3.13"

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install uv
      uses: astral-sh/setup-uv@22695119d769bdb6f7032ad67b9bca0ef8c4a174 # v5
    - name: Install required Python versions
      run: |
        uv python install ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        uv sync --frozen --all-groups
    - name: Run tox targets for python ${{ matrix.python-version }}
      run: uv run tox run -f $(echo ${{ matrix.python-version }} | tr -d .)

  coverage:
    name: Coverage
    runs-on: ubuntu-22.04
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: python -m pip install --upgrade coverage[toml]
#
#      - name: Combine coverage and fail if it's <95%
#        run: |
#          python -m coverage combine
#          python -m coverage html --skip-covered --skip-empty
#          python -m coverage report --fail-under=95
